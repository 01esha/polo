
Caching for FileItem objects
-------------------------------

FileItem.add_to_cache() should be used for all virtual files and directories (Trash, Archive, Cloud, etc) so that FileViewList can map paths to objects. Path is resolved to a FileItem object using the cache when user types a path in the pathbar. Children will be queried everytime by calling query_children(). Existing child objects will be reused instead of creating new child objects.

There is no use of caching FileItem objects that are local files. query_file_info() is the only method that takes time while creating a new object, and it needs to be queried everytime to determine if file is stale. FileItem.query_children() always reuses file and directory objects attached to the main directory object, so there is no need to add children to cache.

This caching is necessary to keep memory use under control. Without this, every folder refresh will cause memory use to keep increasing.

IconCache
------------
There is a significant delay in loading thumbnail files from disk. Icons and thumbnails for FileItem objects are cached in memory (using class IconCache) to improve performance. Following parameters are used as key to identify objects uniquely: path, changed timestamp, icon size, load_thumbnail, use_transparency, use_emblems.

Archives
------------------------
* In TEST mode, the archive is extracted to a temporary directory. 7zip has a switch (-so) for writing output to stdout. This can be used to send the extracted data to /dev/null. However, in this case 7zip does not report any progress. So this is currently not used.

7z x '/home/teejee/aam/samples/atom.7z' -so '-w/tmp/polo/0t9VJHWD/14616630804292682152/rrsv6Nh3' -y -bb1 -p -- > /dev/null

* 7zip cannot handle LZOP files (both single or tarred). TAR can list TAR.LZO files. LZO files can be listed only with 'lzop -l'. LZO can store multiple files but cannot store paths (directories).

